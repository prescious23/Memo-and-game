{"ast":null,"code":"import React from \"react\"; // class Model{\n//    constructor() {\n//       this.notes = []\n//    }\n// }\n// var model = new Model();\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Memo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userInput: '',\n      color: 'skyblue',\n      alert: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n} //creates list of added notes\n//    render (){\n//       let listAddedNotes = Model.notes.map(function(note){\n//          if(note.id != null){\n//             return(\n//                <div>\n//                   <div className={note.bgColor + `note-box alert col-md-11`}>\n//                   {note.content}\n//                </div>\n//                <div className=\"col-md-1 text-center\">\n//                   <button className=\"delete btn btn-default\" onClick={this.handledeleteNote.bind(this, note.id)}>&times; </button></div>\n//                </div>\n//             )\n//          }\n//   }, this);\n//renders page content\n// return <div>\n//    <div className=\"panel panel-default\">\n//       <div className=\"panel-body\">\n//          <form className=\"form-group\">\n//             <label for=\"add-note\">Type your note Here</label>\n//             <input \n//             id=\"add-note\"\n//             className=\"form-control\"\n//             type=\"text\"\n//             value={this.state.userInput}\n//             placeholder=\"Add note here\"\n//             onChange={this.handleuserInput.bind(this)}\n//             />\n//           </form>\n//             <button className=\"btn btn-success\" onClick={this.handleAddNote.bind(this)}>Save Note </button>\n//             <span className=\"alerts\">{this.state.alert}</span>\n//       </div>\n//    </div>\n//          <h3 className=\"text-center\">Recently added notes</h3> <hr></hr>\n//       <div>\n//          {model.notes.length === 0 ? <h3>No new notes</h3> : listAddedNotes}\n//       </div>\n// </div>\n// }\n// //This code updates the state of the user input\n// handleuserInput(s)\n//    {\n//    this.setState({userInput: s.target.value})\n// }\n// //Adding new note\n// handleAddNote(){\n//    if(this.state.userInput != ''){\n//       AbortController.addNote({\n//          content:this.state.userInput,\n//          bgColor:this.state.color\n//       });\n//    }\n//    //Updating component state\n//    this.setState({\n//       userInput: ''\n//    });\n// //show note is successfully added\n//       if(this.state.userInput != ''){\n//          this.showAddAlert();\n//       }\n// }\n// //Delete a note\n//    handledeleteNote(id){\n//       controller.deleteNote(id);\n//       this.showDeleteAlert();\n//    }\n//    showAddAlert(){\n//       this.setState({alert: 'Your note is added!'})\n//       let hideAlert = setTimeout(this.hideAlert.bind(this), 1000);\n//    }\n//    showDeleteAlert(){\n//       this.setState({alert: 'Note is deleted!'})\n//       let hideAlert = setTimeout(this.hideAlert.bind(this), 1000);\n//    }\n//    hideAlert(){\n//       this.setState({alert: ''})\n//    }\n// }\n// ReactDOM.render(<View/>, document.querySelector('#memo'));\n// class Controller{\n//    addNote(newNote){\n//       newNote.id = (model.notes.length + 1);\n//       model.notes.push(newNote);\n//    }\n// deleteNote(id){\n//    let new_notes = [];\n//    for (let i=0; i< model.notes.length; i++){\n//       if(model.notes[i]['id'] == id){\n//       }\n//       else {\n//          new_notes.push(model.notes[i]);\n//       }\n//    }\n//       model.notes = new_notes;\n//    }\n// }\n// var controller = new Controller();","map":{"version":3,"sources":["C:/Users/KamoheloMokoena/Desktop/memobook/src/pages/Memo.jsx"],"names":["React","Memo","Component","constructor","state","userInput","color","alert","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,eAAe,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAkC;AAC9CC,EAAAA,WAAW,GAAG;AACX;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,SAAS,EAAE,EADD;AAEVC,MAAAA,KAAK,EAAE,SAFG;AAGVC,MAAAA,KAAK,EAAE;AAHG,KAAb;AAKF;;AAEDC,EAAAA,MAAM,GAAE;AAAC,wBAAO,qCAAP;AAAa;;AAVwB,C,CAY9C;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\n\r\n// class Model{\r\n//    constructor() {\r\n//       this.notes = []\r\n//    }\r\n// }\r\n\r\n// var model = new Model();\r\n\r\nexport default class Memo extends React.Component{\r\n   constructor() {\r\n      super();\r\n      this.state = {\r\n         userInput: '',\r\n         color: 'skyblue',\r\n         alert: ''\r\n      };\r\n   }\r\n\r\n   render(){return <></>}\r\n}\r\n   //creates list of added notes\r\n//    render (){\r\n//       let listAddedNotes = Model.notes.map(function(note){\r\n//          if(note.id != null){\r\n//             return(\r\n//                <div>\r\n//                   <div className={note.bgColor + `note-box alert col-md-11`}>\r\n//                   {note.content}\r\n//                </div>\r\n//                <div className=\"col-md-1 text-center\">\r\n//                   <button className=\"delete btn btn-default\" onClick={this.handledeleteNote.bind(this, note.id)}>&times; </button></div>\r\n//                </div>\r\n//             )\r\n//          }\r\n//   }, this);\r\n\r\n  //renders page content\r\n// return <div>\r\n//    <div className=\"panel panel-default\">\r\n//       <div className=\"panel-body\">\r\n//          <form className=\"form-group\">\r\n//             <label for=\"add-note\">Type your note Here</label>\r\n//             <input \r\n//             id=\"add-note\"\r\n//             className=\"form-control\"\r\n//             type=\"text\"\r\n//             value={this.state.userInput}\r\n//             placeholder=\"Add note here\"\r\n//             onChange={this.handleuserInput.bind(this)}\r\n//             />\r\n//           </form>\r\n\r\n//             <button className=\"btn btn-success\" onClick={this.handleAddNote.bind(this)}>Save Note </button>\r\n//             <span className=\"alerts\">{this.state.alert}</span>\r\n//       </div>\r\n//    </div>\r\n//          <h3 className=\"text-center\">Recently added notes</h3> <hr></hr>\r\n//       <div>\r\n//          {model.notes.length === 0 ? <h3>No new notes</h3> : listAddedNotes}\r\n//       </div>\r\n// </div>\r\n// }\r\n\r\n// //This code updates the state of the user input\r\n// handleuserInput(s)\r\n//    {\r\n//    this.setState({userInput: s.target.value})\r\n// }\r\n\r\n// //Adding new note\r\n// handleAddNote(){\r\n//    if(this.state.userInput != ''){\r\n//       AbortController.addNote({\r\n//          content:this.state.userInput,\r\n//          bgColor:this.state.color\r\n//       });\r\n//    }\r\n\r\n//    //Updating component state\r\n//    this.setState({\r\n//       userInput: ''\r\n//    });\r\n\r\n\r\n// //show note is successfully added\r\n//       if(this.state.userInput != ''){\r\n//          this.showAddAlert();\r\n//       }\r\n// }\r\n\r\n// //Delete a note\r\n//    handledeleteNote(id){\r\n//       controller.deleteNote(id);\r\n//       this.showDeleteAlert();\r\n//    }\r\n\r\n//    showAddAlert(){\r\n//       this.setState({alert: 'Your note is added!'})\r\n//       let hideAlert = setTimeout(this.hideAlert.bind(this), 1000);\r\n//    }\r\n\r\n//    showDeleteAlert(){\r\n//       this.setState({alert: 'Note is deleted!'})\r\n//       let hideAlert = setTimeout(this.hideAlert.bind(this), 1000);\r\n//    }\r\n\r\n//    hideAlert(){\r\n//       this.setState({alert: ''})\r\n//    }\r\n\r\n// }\r\n\r\n// ReactDOM.render(<View/>, document.querySelector('#memo'));\r\n\r\n// class Controller{\r\n//    addNote(newNote){\r\n//       newNote.id = (model.notes.length + 1);\r\n//       model.notes.push(newNote);\r\n//    }\r\n\r\n\r\n// deleteNote(id){\r\n//    let new_notes = [];\r\n//    for (let i=0; i< model.notes.length; i++){\r\n//       if(model.notes[i]['id'] == id){\r\n\r\n//       }\r\n//       else {\r\n//          new_notes.push(model.notes[i]);\r\n//       }\r\n//    }\r\n//       model.notes = new_notes;\r\n//    }\r\n// }\r\n// var controller = new Controller();\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}