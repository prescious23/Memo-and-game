{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.Ref = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar ReactIs = _interopRequireWildcard(require(\"react-is\"));\n\nvar _RefFindNode = require(\"./RefFindNode\");\n\nvar _RefForward = require(\"./RefForward\");\n\nvar Ref = function Ref(props) {\n  var children = props.children,\n      innerRef = props.innerRef,\n      rest = (0, _objectWithoutPropertiesLoose2.default)(props, [\"children\", \"innerRef\"]);\n  var child = React.Children.only(children);\n  var ElementType = ReactIs.isForwardRef(child) ? _RefForward.RefForward : _RefFindNode.RefFindNode;\n  var childWithProps = child && rest && Object.keys(rest).length > 0 ? /*#__PURE__*/React.cloneElement(child, rest) : child;\n  return /*#__PURE__*/React.createElement(ElementType, {\n    innerRef: innerRef\n  }, childWithProps);\n};\n\nexports.Ref = Ref;","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAGO,IAAMA,GAAsC,GAAG,SAAzCA,GAAyC,QAAS;AAAA,MACrDC,QADqD,GACrBC,KADqB,CACrDD,QADqD;AAAA,MAC3CE,QAD2C,GACrBD,KADqB,CAC3CC,QAD2C;AAAA,MAC9BC,IAD8B,+CACrBF,KADqB;AAG7D,MAAMG,KAAK,GAAGC,KAAK,CAACC,QAAND,CAAeE,IAAfF,CAAoBL,QAApBK,CAAd;AACA,MAAMG,WAAW,GAAGC,OAAO,CAACC,YAARD,CAAqBL,KAArBK,IAA8BE,sBAA9BF,GAA2CG,wBAA/D;AACA,MAAMC,cAAc,GAAGT,KAAK,IAAID,IAATC,IAAiBU,MAAM,CAACC,IAAPD,CAAYX,IAAZW,EAAkBE,MAAlBF,GAA2B,CAA5CV,gBAAgDC,KAAK,CAACY,YAANZ,CAAmBD,KAAnBC,EAA0BF,IAA1BE,CAAhDD,GAAkFA,KAAzG;AAEA,sBAAOC,oBAACG,WAAD;AAAaN,YAAQ,EAAEA;AAAvB,KAAkCW,cAAlC,CAAP;AAPK","names":["Ref","children","props","innerRef","rest","child","React","Children","only","ElementType","ReactIs","isForwardRef","RefForward","RefFindNode","childWithProps","Object","keys","length","cloneElement"],"sources":["C:\\Users\\KamoheloMokoena\\Desktop\\memobook\\node_modules\\semantic-ui-react\\node_modules\\@fluentui\\react-component-ref\\dist\\commonjs\\Ref.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactIs from 'react-is';\n\nimport { RefFindNode } from './RefFindNode';\nimport { RefForward } from './RefForward';\nimport { RefProps } from './utils';\n\nexport const Ref: React.FunctionComponent<RefProps> = props => {\n  const { children, innerRef, ...rest } = props;\n\n  const child = React.Children.only(children);\n  const ElementType = ReactIs.isForwardRef(child) ? RefForward : RefFindNode;\n  const childWithProps = child && rest && Object.keys(rest).length > 0 ? React.cloneElement(child, rest) : child;\n\n  return <ElementType innerRef={innerRef}>{childWithProps}</ElementType>;\n};\n"]},"metadata":{},"sourceType":"script"}